# -*- coding: utf-8 -*-
"""Copy of for all animals the code.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1mraQN9P3r0SiDJ4MY2Bmu4R2gWb9faxb

Upload image: The first step allows you to upload an image from your local machine to the Colab environment.

# *This* will open a file picker to upload image ***bold text***
"""

from google.colab import files

# This will open a file picker to upload image
uploaded = files.upload()

"""Import libraries: This step imports all the necessary libraries for image processing, deep learning, and plotting."""

import numpy as np
import matplotlib.pyplot as plt
import os
from tensorflow.keras.preprocessing import image
from tensorflow.keras.applications.vgg16 import VGG16, preprocess_input, decode_predictions

"""Load pre-trained model: A pre-trained VGG16 model, which has already been trained on the large ImageNet dataset, is loaded."""

# Load the VGG16 model pre-trained on ImageNet
model = VGG16(weights='imagenet')

"""Classify image: The preprocessed image is fed into the VGG16 model to predict what the image contains."""

# Change this to the uploaded filename
img_path = 'dog imageeeeee.webp'  # Example: change to your uploaded filename

# Check if file exists
if os.path.exists(img_path):
    print("✅ Image found. Classifying...")

    # Load and resize image to 224x224 for VGG16
    img = image.load_img(img_path, target_size=(224, 224))

    # Show the image
    plt.imshow(img)
    plt.axis('off')
    plt.title("Input Image")
    plt.show()

    # Convert to array and preprocess
    x = image.img_to_array(img)
    x = np.expand_dims(x, axis=0)
    x = preprocess_input(x)
else:
    print("❌ Image file not found.")

"""Display results: The top predictions from the model are displayed, along with their confidence scores. The most likely prediction is then highlighted"""

# Predict the class
preds = model.predict(x)

# Decode predictions (top 3 results)
decoded = decode_predictions(preds, top=3)[0]

# Show results
print("\nTop Predictions:")
for i, (imagenet_id, label, prob) in enumerate(decoded):
    print(f"{i+1}. {label}: {prob*100:.2f}%")

# Pick the most confident one
animal_name = decoded[0][1].replace("_", " ")  # Make it more readable

# Show result
print(f"\n✅ It's a {animal_name}!")